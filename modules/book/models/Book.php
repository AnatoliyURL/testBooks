<?php

namespace app\modules\book\models;

use Yii;

/**
 * This is the model class for table "book".
 *
 * @property int $id
 * @property string $title
 * @property string $date_released
 * @property string|null $description
 * @property string|null $isbn
 * @property string|null $cover
 *
 * @property BookAuthors[] $bookAuthors
 * @property BookSubscription[] $bookSubscriptions
 * @property CatalogBooks[] $catalogBooks
 * @property CatalogBooksHistory[] $catalogBooksHistories
 * @property string $urlCover
 */
class Book extends \yii\db\ActiveRecord
{

    public $image;
    /**
     * {@inheritdoc}
     */
    public static function tableName()
    {
        return 'book';
    }

    /**
     * {@inheritdoc}
     */
    public function rules()
    {
        return [
            [['title', 'date_released'], 'required'],
            [['date_released'], 'safe'],
            [['description'], 'string'],
            [['title', 'cover'], 'string', 'max' => 255],
            [['isbn'], 'string', 'max' => 13],
            [['image'], 'file', 'extensions' => 'png, jpg'],
        ];
    }

    /**
     * {@inheritdoc}
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'title' => 'Title',
            'date_released' => 'Date Released',
            'description' => 'Description',
            'isbn' => 'Isbn',
            'cover' => 'Cover',
        ];
    }

    /**
     * Gets query for [[BookAuthors]].
     *
     * @return \yii\db\ActiveQuery
     */
    public function getBookAuthors()
    {
        return $this->hasMany(BookAuthors::class, ['book_id' => 'id']);
    }

    /**
     * Gets query for [[BookSubscriptions]].
     *
     * @return \yii\db\ActiveQuery
     */
    public function getBookSubscriptions()
    {
        return $this->hasMany(BookSubscription::class, ['book_id' => 'id']);
    }

    /**
     * Gets query for [[CatalogBooks]].
     *
     * @return \yii\db\ActiveQuery
     */
    public function getCatalogBooks()
    {
        return $this->hasMany(CatalogBooks::class, ['book_id' => 'id']);
    }

    /**
     * Gets query for [[CatalogBooksHistories]].
     *
     * @return \yii\db\ActiveQuery
     */
    public function getCatalogBooksHistories()
    {
        return $this->hasMany(CatalogBooksHistory::class, ['book_id' => 'id']);
    }

    public function getUrlCover(): string
    {
        return '/book_cover/' . $this->cover;
    }

    public function upload(){
        if ($this->validate()) {
            if ($this->image->saveAs(Yii::$app->basePath . "/web/book_cover/{$this->image->baseName}.{$this->image->extension}")) {
                return false;
            } else {
                $this->cover = "{$this->image->baseName}.{$this->image->extension}";
            }
            return "{$this->image->baseName}.{$this->image->extension}";
        } else {
            return false;
        }
    }

    public function afterSave($insert, $changedAttributes)
    {
        //$this->upload();
        parent::afterSave($insert, $changedAttributes); // TODO: Change the autogenerated stub
    }
}
